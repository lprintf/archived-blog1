{"meta":{"title":"Little Printf's Blog (Archived)","subtitle":"","description":"","author":"Yujing lin","url":"https://lprintf.github.io/archived-blog1","root":"/archived-blog1/"},"pages":[{"title":"我的朋友们","date":"2025-09-02T03:29:02.749Z","updated":"2025-09-02T03:29:02.749Z","comments":true,"path":"friends/index.html","permalink":"https://lprintf.github.io/archived-blog1/friends/index.html","excerpt":"","text":""},{"title":"关于","date":"2025-09-02T03:50:21.073Z","updated":"2025-09-02T03:50:21.073Z","comments":true,"path":"about/index.html","permalink":"https://lprintf.github.io/archived-blog1/about/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp; 俺也说不清自己做什么的,21年大学毕业. 17年下旬从消防复员入学,开始编程生涯. 浑浑噩噩到18年中旬,迷迷糊糊参加了一些比赛,做了一些简单的人工智能应用,陆续拿了一些奖项.同时加入学校实验室,做一些包括运维,数据处理,全栈等杂活,现在想来老师心倒是挺大. 就这样还算充实地度过了19年,写下这篇文章时正被20年的疫情困在家中.这段时间也意识到自己眼界实在太窄,没认识什么大牛,也荒废了不少时间.于是开始沉迷学习.虽然基本什么都没学到,但…似乎没什么可以但的.心态要平衡. 废弃博客命名规则与链接： 规则： archived-blog\\d{1} ： https://lprintf.github.io\\archived-blog\\d{1} 示例： archived-blog0 ： https://lprintf.github.io/archived-blog0archived-blog1 ： https://lprintf.github.io/archived-blog1"},{"title":"","date":"2025-08-28T08:47:58.046Z","updated":"2025-08-28T08:47:58.046Z","comments":true,"path":"projects/index.html","permalink":"https://lprintf.github.io/archived-blog1/projects/index.html","excerpt":"","text":""},{"title":"","date":"2025-08-28T08:47:58.045Z","updated":"2025-08-28T08:47:58.045Z","comments":true,"path":"mylist/index.html","permalink":"https://lprintf.github.io/archived-blog1/mylist/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2025-08-28T08:47:58.037Z","updated":"2025-08-28T08:47:58.037Z","comments":true,"path":"blog/categories/index.html","permalink":"https://lprintf.github.io/archived-blog1/blog/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2025-08-28T08:47:58.038Z","updated":"2025-08-28T08:47:58.038Z","comments":true,"path":"blog/tags/index.html","permalink":"https://lprintf.github.io/archived-blog1/blog/tags/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2025-08-28T08:47:58.037Z","updated":"2025-08-28T08:47:58.037Z","comments":true,"path":"blog/archives/index.html","permalink":"https://lprintf.github.io/archived-blog1/blog/archives/index.html","excerpt":"","text":""}],"posts":[{"title":"vscode-go语言开发容器构建","slug":"docker-go","date":"2020-03-19T22:34:35.000Z","updated":"2025-08-28T08:47:58.035Z","comments":true,"path":"2020/03/20/docker-go/","link":"","permalink":"https://lprintf.github.io/archived-blog1/2020/03/20/docker-go/","excerpt":"","text":"(本文供有vscode容器开发基础的人食用.) 这几天陆续搭建了很多开发容器,其中遇到的坑最多的便是go语言容器了,今天在这里总结一下. 国内使用vscode官网go语言容器配置会遇到不少问题,具体修复操作如下. 开始 国内镜像加速配置 12sed -i s@&#x2F;deb.debian.org&#x2F;@&#x2F;mirrors.aliyun.com&#x2F;@g &#x2F;etc&#x2F;apt&#x2F;sources.list \\ apt-get -o Acquire::Check-Valid-Until&#x3D;false update \\ 第一句常使用sed命令修改apt配置文件第二句解决容器时区不匹配造成的证书过期问题 服务器无法访问 报错如下: Get &quot;https://proxy.golang.org/golang.org/x/tools/gopls/@v/list&quot;: dial tcp 172.217.27.145:443: connect: connection refused 容器默认不会使用主机代理,通过容器内声明代理服务器可解决. export http_proxy=http://host.docker.internal:1080 git TLS解码错误 error: RPC failed; curl 56 GnuTLS recv error (-9): Error decoding the received TLS packet. 这里猜测git若先于openssl安装会使用TLS做https的安全协议,调换git安装顺序后侥幸解决. 然而排错过程中还是偶尔报该错误,故猜测是数据传输时出现错误,遇到便重试. golang安装脚本bug 日志如下,报错为空,实际上为缺少BINARY=golang-ci-lint变量的缘故.其中RUN命令可供参考. 1234567891011121314151617[2020-03-20T06:20:54.768Z] [PID 13888] [167755 ms] cd .git clone -- https:&#x2F;&#x2F;github.com&#x2F;stamblerre&#x2F;gocode &#x2F;tmp&#x2F;gotools&#x2F;src&#x2F;github.com&#x2F;stamblerre&#x2F;gocode[2020-03-20T06:23:56.527Z] [PID 13888] [349515 ms] cd &#x2F;tmp&#x2F;gotools&#x2F;src&#x2F;github.com&#x2F;stamblerre&#x2F;gocodegit submodule update --init --recursivecd &#x2F;tmp&#x2F;gotools&#x2F;src&#x2F;github.com&#x2F;stamblerre&#x2F;gocode[2020-03-20T06:23:56.562Z] [PID 13888] [349550 ms] git show-refcd &#x2F;tmp&#x2F;gotools&#x2F;src&#x2F;github.com&#x2F;stamblerre&#x2F;gocodegit submodule update --init --recursive[2020-03-20T06:24:00.884Z] [PID 13888] [353872 ms] golangci&#x2F;golangci-lint info checking GitHub for latest tag[2020-03-20T06:24:00.928Z] [PID 13888] [353916 ms] [2020-03-20T06:24:03.145Z] [PID 13888] [356133 ms] golangci&#x2F;golangci-lint info found version: 1.24.0 for v1.24.0&#x2F;linux&#x2F;amd64[2020-03-20T06:36:46.049Z] [PID 13888] [1119037 ms] The command &#39;&#x2F;bin&#x2F;sh -c sed -i s@&#x2F;deb.debian.org&#x2F;@&#x2F;mirrors.aliyun.com&#x2F;@g &#x2F;etc&#x2F;apt&#x2F;sources.list &amp;&amp; apt-get -o Acquire::Check-Valid-Until&#x3D;false update &amp;&amp; apt-get -y install --no-install-recommends apt-utils dialog 2&gt;&amp;1 &amp;&amp; apt-get -y install openssh-client less iproute2 procps lsb-release git &amp;&amp; mkdir -p &#x2F;tmp&#x2F;gotools &amp;&amp; cd &#x2F;tmp&#x2F;gotools &amp;&amp; export http_proxy&#x3D;http:&#x2F;&#x2F;host.docker.internal:1080 &amp;&amp; GOPATH&#x3D;&#x2F;tmp&#x2F;gotools GO111MODULE&#x3D;on go get -v golang.org&#x2F;x&#x2F;tools&#x2F;gopls@latest 2&gt;&amp;1 &amp;&amp; GOPATH&#x3D;&#x2F;tmp&#x2F;gotools GO111MODULE&#x3D;on go get -v honnef.co&#x2F;go&#x2F;tools&#x2F;...@latest golang.org&#x2F;x&#x2F;tools&#x2F;cmd&#x2F;gorename@latest golang.org&#x2F;x&#x2F;tools&#x2F;cmd&#x2F;goimports@latest golang.org&#x2F;x&#x2F;tools&#x2F;cmd&#x2F;guru@latest golang.org&#x2F;x&#x2F;lint&#x2F;golint@latest github.com&#x2F;mdempsky&#x2F;gocode@latest github.com&#x2F;cweill&#x2F;gotests&#x2F;...@latest github.com&#x2F;haya14busa&#x2F;goplay&#x2F;cmd&#x2F;goplay@latest github.com&#x2F;sqs&#x2F;goreturns@latest github.com&#x2F;josharian&#x2F;impl@latest github.com&#x2F;davidrjenni&#x2F;reftools&#x2F;cmd&#x2F;fillstruct@latest github.com&#x2F;uudashr&#x2F;gopkgs&#x2F;v2&#x2F;cmd&#x2F;gopkgs@latest github.com&#x2F;ramya-rao-a&#x2F;go-outline@latest github.com&#x2F;acroca&#x2F;go-symbols@latest github.com&#x2F;godoctor&#x2F;godoctor@latest github.com&#x2F;rogpeppe&#x2F;godef@latest github.com&#x2F;zmb3&#x2F;gogetdoc@latest github.com&#x2F;fatih&#x2F;gomodifytags@latest github.com&#x2F;mgechev&#x2F;revive@latest github.com&#x2F;go-delve&#x2F;delve&#x2F;cmd&#x2F;dlv@latest 2&gt;&amp;1 &amp;&amp; GOPATH&#x3D;&#x2F;tmp&#x2F;gotools go get -v github.com&#x2F;alecthomas&#x2F;gometalinter 2&gt;&amp;1 &amp;&amp; GOPATH&#x3D;&#x2F;tmp&#x2F;gotools go get -x -d github.com&#x2F;stamblerre&#x2F;gocode 2&gt;&amp;1 &amp;&amp; GOPATH&#x3D;&#x2F;tmp&#x2F;gotools go build -o gocode-gomod github.com&#x2F;stamblerre&#x2F;gocode &amp;&amp; mv &#x2F;tmp&#x2F;gotools&#x2F;bin&#x2F;* &#x2F;usr&#x2F;local&#x2F;bin&#x2F; &amp;&amp; mv gocode-gomod &#x2F;usr&#x2F;local&#x2F;bin&#x2F; &amp;&amp; curl -sSfL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;golangci&#x2F;golangci-lint&#x2F;master&#x2F;install.sh | sh -s -- -b &#x2F;usr&#x2F;local&#x2F;bin 2&gt;&amp;1 &amp;&amp; groupadd --gid $USER_GID $USERNAME &amp;&amp; useradd -s &#x2F;bin&#x2F;bash --uid $USER_UID --gid $USER_GID -m $USERNAME &amp;&amp; apt-get install -y sudo &amp;&amp; echo $USERNAME ALL&#x3D;\\(root\\) NOPASSWD:ALL &gt; &#x2F;etc&#x2F;sudoers.d&#x2F;$USERNAME &amp;&amp; chmod 0440 &#x2F;etc&#x2F;sudoers.d&#x2F;$USERNAME &amp;&amp; apt-get autoremove -y &amp;&amp; apt-get clean -y &amp;&amp; rm -rf &#x2F;var&#x2F;lib&#x2F;apt&#x2F;lists&#x2F;* &#x2F;tmp&#x2F;gotools&#39; returned a non-zero code: 18[2020-03-20T06:36:46.050Z] [PID 13888] [1119038 ms] Failed: Building an image from the Dockerfile (this can take a while).[2020-03-20T06:36:46.052Z] [PID 13888] [1119040 ms] Command failed: C:\\Program Files\\Docker\\Docker\\resources\\bin\\docker.exe build -f d:\\code\\go\\.devcontainer\\Dockerfile -t vsc-go-92c6f27f59ab08d675ee8547f2079099 d:\\code\\go\\.devcontainer golang安装命令管道符后紧跟BINARY=golang-ci-lint可解决: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | BINARY=golang-ci-lint sh -s -- -b /usr/local/bin 2&gt;&amp;1 总结这怕是目前我遇到的最棘手的开发容器了.要不是手头有几本书消遣,这么漫长的重试等待时间怕是很影响我心态.也不正是这些困难,才有此刻拨云见日的欣喜么.此外,有些疑问尚未解决,譬如上面所说的git clone命令间歇故障.希望能在评论区得到大佬的指教.","categories":[{"name":"开发","slug":"开发","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://lprintf.github.io/archived-blog1/tags/docker/"},{"name":"go","slug":"go","permalink":"https://lprintf.github.io/archived-blog1/tags/go/"},{"name":"vscode","slug":"vscode","permalink":"https://lprintf.github.io/archived-blog1/tags/vscode/"}]},{"title":"2020云创云计算技能预选赛参赛体验续","slug":"cloud-1","date":"2020-02-18T02:57:08.000Z","updated":"2025-08-28T08:47:58.035Z","comments":true,"path":"2020/02/18/cloud-1/","link":"","permalink":"https://lprintf.github.io/archived-blog1/2020/02/18/cloud-1/","excerpt":"","text":"今天开开心心地跟老师讨论着项目文档,突然消息框一抖,我的受虐遭遇拉开了序幕. 有幸蹭得一次额外的平台接触机会,我接手时分数是负几千.掠过一眼题目后,心想,”这不就是第一天的题目么”.我快速按第一天的策略部署了一遍,3个实例的负载均衡.看着分数涨了一会,就屁颠颠地跑去研究CDN服务了.CDN配完后看了下成绩,”尼玛,分数怎么跌得怎么厉害”.得分记录一堆POST错误,试着访问了下url,发现确实无法访问了.看着成绩一点点跌下去,我愈发焦急.虽然远程桌面很卡,但我还是强行冷静地排了排错,实在想不出问题便看了下题目.发现多了服务多了宕机事件… 城里人真会玩,早上比赛开始前还在赛题url上挂支付宝收款码,企图收智商税. 没其它好办法,摸索了下用模板新建了十几个实例,挂负载均衡上,挂了的实例手动终止,手动新建新实例.就这样,我慢慢增加实例.随着分数和实例成正比增加,我愈发大胆,打算一口气开它10个实例.然而,至此我才发现,实例的上限是15个. 也许我应该在性能与成本中寻找平衡才对,也许是我真的太菜了,我最终还是没拿到什么好成绩.应该做负载均衡么,还是应该做内容分发,应该有办法让服务器自己终止宕机实例并新建实例的吧…… 今天又被虐了,可我怎么莫名有点兴奋呢?难道…我开始有抖M倾向了…真令人害怕.","categories":[{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"竞赛","slug":"竞赛","permalink":"https://lprintf.github.io/archived-blog1/tags/%E7%AB%9E%E8%B5%9B/"},{"name":"云计算","slug":"云计算","permalink":"https://lprintf.github.io/archived-blog1/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"}]},{"title":"2020云创云计算技能预选赛参赛体验","slug":"cloud-0","date":"2020-02-17T05:13:25.000Z","updated":"2025-08-28T08:47:58.034Z","comments":true,"path":"2020/02/17/cloud-0/","link":"","permalink":"https://lprintf.github.io/archived-blog1/2020/02/17/cloud-0/","excerpt":"","text":"今天参加了2020云创云计算技能预选赛,体验了主办方的云计算实训平台.这是一次很有意思的体验,也是我和云产品的第一次超近距离接触. 规则很简单,根据题目在平台上部署一个服务器,平台会模拟客户访问,根据延迟和部署成本评分.当部署完毕并提交url时,会有持续到比赛结束的连续访问流量,每次访问得到合格响应都会加分,响应不合格扣分.也就是说…这里可以卖个关子 下面详细说说比赛经历吧: 第一个困难是VPC私有云网络配置,没配internet网关浪费了不少时间.配好后部署实例倒是简单,但分数提升很慢.一开始以为胜负已分,该做的都已做,接下来只能等比赛结果了.思考挣扎好一会才猜想,也许这便是第二个难点. EC2,弹性云服务器,是有弹性没错,当访问量大了,弹性增强后的服务器也可能承受不了,造成资源无法访问.所以,聪明的人类发明了负载均衡技术.我真是个sb,口口声声大爱nginx竟然没想到这点.所以,第二个难点是负载均衡.也怪我没仔细看题,其实题目已经暗示了我们可以自由发挥的空间.AWS的负载均衡不同于nginx,不需要写配置文件,用图形界面管理,稍微摸索下便可.完成后分数果然提高了很多.当然,这还没结束. 第三个难点,大胆增加实例,由于我只部署了三个不同区域(宁夏就3个)的三个不同实例,比赛后期服务资源还算有点捉襟见肘,但我意识到应该增加实例是一切都已经来不及了,随着闹钟一响,服务资源清零,分数波动停止,一切变得索然无味(其实回味无穷). 说实话,我输得不服气,再来一次一定能有更好的结果.不过就收获而言,还是够我开心一段时间的. ps: 看了下比赛回放,第一名资源分每次扣40,猜测可能是只开一个实例,获得域名后添加内容分发服务.也许有更多吧,不服气只是因为自己的无知.","categories":[{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"竞赛","slug":"竞赛","permalink":"https://lprintf.github.io/archived-blog1/tags/%E7%AB%9E%E8%B5%9B/"},{"name":"云计算","slug":"云计算","permalink":"https://lprintf.github.io/archived-blog1/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-02-11T17:03:34.000Z","updated":"2025-08-28T08:47:58.036Z","comments":true,"path":"2020/02/12/hello-world/","link":"","permalink":"https://lprintf.github.io/archived-blog1/2020/02/12/hello-world/","excerpt":"","text":"再次否定自己的全部,这次把自己旧博客整个废弃了,且并不打算整理旧博文.在这里简单过一遍当年做的蠢事吧: 大一主要学习各种计算机理论基础,大作业交控制台应用.上学期学了c语言,然后被室友拉去比赛,硬着头皮拼凑出一个安卓记事本应用;下学期学了c++. 大二开始学习软件工程相关课程以及各种语言,java是课上教的,自学python,shell,c#等.在校外接了个外包任务,拿到了第一张实习证明,后面觉得这样独立开发容易固化思维,且影响学业,没继续接活.在学校实验室干着相对轻松的任务,如超算部署,数据清洗,中间件开发等.印象较深的是部署vsphere,装硬盘拧螺丝拧到手软,至此开始愚蠢地迷上vmware.也鬼使神差地参加过不少比赛,并莫名奇妙地写了很多当时能令队友称奇但结构极其愚蠢的应用–基于AI识别与AR展示的移动海洋馆(django+unity+c#+pytorch,不要脸地换了若干校一,市一,一个国二奖项,衍生应用有垃圾分类app),超分辨率重构(pytorch,ASC19二等奖).对了,坐标上海,市级算等级.至此我的王者再无市级标志. 大三上学期的课程只是先前课程的进阶,倒是因为实验室需要自学了前端全栈.离开实验室前基本完成内波项目,架构好潮汐项目(前端vue后端express/flask).基于全栈基础和信息安全课学的非对称加密,我又做了个在线签名平台,打算这几天重构.目前自以为做得最对的一件事便是迷上了docker和nginx,但我竟然愚蠢地把各种拿得到源码的项目都粗鲁地容器化了,用nginx实现端口复用(生活所迫,小心使用实验室外网端口.不过实验室服务资源确实给力).那些被我容器话的东西有android-studio,pycharm,webstorm,dawn系列(eclipse+各种插件的变体,私以为这个名字绝妙),flask开发环境,scrapy开发环境,若干mock服务器,若干项目管理服务器,gitlab,eclipse-chi,mkdocs,鱼类识别服务器,数字签名网站全项目等.对了,上一个博客网站就是用mkdocs部署的.然后因新型冠状病毒至今未回上海. 一个人的英语可以菜到什么程度呢?大概是大学还能在学编程时输出”Hellow world”吧?今天可算是写对了.那么,请让我见识下更广阔的世界吧.","categories":[{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/tags/%E5%85%B6%E5%AE%83/"}]}],"categories":[{"name":"开发","slug":"开发","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%BC%80%E5%8F%91/"},{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://lprintf.github.io/archived-blog1/tags/docker/"},{"name":"go","slug":"go","permalink":"https://lprintf.github.io/archived-blog1/tags/go/"},{"name":"vscode","slug":"vscode","permalink":"https://lprintf.github.io/archived-blog1/tags/vscode/"},{"name":"竞赛","slug":"竞赛","permalink":"https://lprintf.github.io/archived-blog1/tags/%E7%AB%9E%E8%B5%9B/"},{"name":"云计算","slug":"云计算","permalink":"https://lprintf.github.io/archived-blog1/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"},{"name":"其它","slug":"其它","permalink":"https://lprintf.github.io/archived-blog1/tags/%E5%85%B6%E5%AE%83/"}]}